{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe47b35f4097d2268894ca541bf21937f14003450c8b0b1e5f087fe63378c678b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "944507",
    "logsBloom": "0x
    "blockHash": "0xac20d03dc1432728e3a4b93133eb80a33d3995b91f7fa75ecc8100f1a53646c0",
    "transactionHash": "0xe47b35f4097d2268894ca541bf21937f14003450c8b0b1e5f087fe63378c678b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "944507",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "b5abe3d0985b6d8b430249ec3db84c6e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\nAggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\nfunction getOwner() public view returns (address){\\n    return i_owner;\\n}\\n\\nfunction getFunder(uint256 index) public view returns (address){\\n    return s_funders[index];\\n}\\n\\nfunction getAddressToAmountFunded(address funder) public view returns (uint256){\\n    return s_addressToAmountFunded[funder];\\n}\\n\\nfunction getPriceFeed() public view returns (AggregatorV3Interface){\\n    return s_priceFeed;\\n}\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0x75e80c4597d464ec4f52fc7a11977386fb7cc03cb55737e4a6e78c55f9964925\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3f289f578b21233bef21ac650f419152b406c6a415586828e89ba90811b284aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010b7380380620010b783398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f4b806200016c6000396000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063d7b4750c146101b45761008e565b80630343fb25146100985780633ccfd60b146100d557806354861af7146100ec5780636b69a592146101295761008e565b3661008e5761008c6101f1565b005b6100966101f1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610883565b61032b565b6040516100cc91906108c9565b60405180910390f35b3480156100e157600080fd5b506100ea610373565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610910565b6105b5565b604051610120919061094c565b60405180910390f35b34801561013557600080fd5b5061013e6105f4565b60405161014b91906108c9565b60405180910390f35b34801561016057600080fd5b50610169610601565b604051610176919061094c565b60405180910390f35b34801561018b57600080fd5b5061019461062b565b6040516101a191906109c6565b60405180910390f35b6101b26101f1565b005b3480156101c057600080fd5b506101db60048036038101906101d69190610910565b610655565b6040516101e8919061094c565b60405180910390f35b6802b5e3af16b1880000610230600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069d90919063ffffffff16565b1015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610a3e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102bf9190610a8d565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fa576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a5576000600182815481106104205761041f610ae3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049d90610b12565b9150506103fd565b50600067ffffffffffffffff8111156104c1576104c0610b5b565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b5060019080519060200190610505929190610779565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052c90610bbb565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610c1c565b60405180910390fd5b50565b600181815481106105c557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061066b5761066a610ae3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106a9836106d9565b90506000670de0b6b3a764000085836106c29190610c3c565b6106cc9190610cc5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072257600080fd5b505afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610d83565b5050509150506402540be400816107719190610dfe565b915050919050565b8280548282559060005260206000209081019282156107f2579160200282015b828111156107f15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610799565b5b5090506107ff9190610803565b5090565b5b8082111561081c576000816000905550600101610804565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085082610825565b9050919050565b61086081610845565b811461086b57600080fd5b50565b60008135905061087d81610857565b92915050565b60006020828403121561089957610898610820565b5b60006108a78482850161086e565b91505092915050565b6000819050919050565b6108c3816108b0565b82525050565b60006020820190506108de60008301846108ba565b92915050565b6108ed816108b0565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b60006020828403121561092657610925610820565b5b6000610934848285016108fb565b91505092915050565b61094681610845565b82525050565b6000602082019050610961600083018461093d565b92915050565b6000819050919050565b600061098c61098761098284610825565b610967565b610825565b9050919050565b600061099e82610971565b9050919050565b60006109b082610993565b9050919050565b6109c0816109a5565b82525050565b60006020820190506109db60008301846109b7565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a28601b836109e1565b9150610a33826109f2565b602082019050919050565b60006020820190508181036000830152610a5781610a1b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a98826108b0565b9150610aa3836108b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad857610ad7610a5e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b1d826108b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b5057610b4f610a5e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ba5600083610b8a565b9150610bb082610b95565b600082019050919050565b6000610bc682610b98565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c06600b836109e1565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b6000610c47826108b0565b9150610c52836108b0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8b57610c8a610a5e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cd0826108b0565b9150610cdb836108b0565b925082610ceb57610cea610c96565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d1581610cf6565b8114610d2057600080fd5b50565b600081519050610d3281610d0c565b92915050565b6000819050919050565b610d4b81610d38565b8114610d5657600080fd5b50565b600081519050610d6881610d42565b92915050565b600081519050610d7d816108e4565b92915050565b600080600080600060a08688031215610d9f57610d9e610820565b5b6000610dad88828901610d23565b9550506020610dbe88828901610d59565b9450506040610dcf88828901610d6e565b9350506060610de088828901610d6e565b9250506080610df188828901610d23565b9150509295509295909350565b6000610e0982610d38565b9150610e1483610d38565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e5357610e52610a5e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e9057610e8f610a5e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ecd57610ecc610a5e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0a57610f09610a5e565b5b82820290509291505056fea264697066735822122046569dcefaa287d3e683b511107dd392b43b2e8df47398da6c6b0fc9e2654b2464736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063d7b4750c146101b45761008e565b80630343fb25146100985780633ccfd60b146100d557806354861af7146100ec5780636b69a592146101295761008e565b3661008e5761008c6101f1565b005b6100966101f1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610883565b61032b565b6040516100cc91906108c9565b60405180910390f35b3480156100e157600080fd5b506100ea610373565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610910565b6105b5565b604051610120919061094c565b60405180910390f35b34801561013557600080fd5b5061013e6105f4565b60405161014b91906108c9565b60405180910390f35b34801561016057600080fd5b50610169610601565b604051610176919061094c565b60405180910390f35b34801561018b57600080fd5b5061019461062b565b6040516101a191906109c6565b60405180910390f35b6101b26101f1565b005b3480156101c057600080fd5b506101db60048036038101906101d69190610910565b610655565b6040516101e8919061094c565b60405180910390f35b6802b5e3af16b1880000610230600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069d90919063ffffffff16565b1015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610a3e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102bf9190610a8d565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fa576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a5576000600182815481106104205761041f610ae3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049d90610b12565b9150506103fd565b50600067ffffffffffffffff8111156104c1576104c0610b5b565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b5060019080519060200190610505929190610779565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052c90610bbb565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610c1c565b60405180910390fd5b50565b600181815481106105c557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061066b5761066a610ae3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106a9836106d9565b90506000670de0b6b3a764000085836106c29190610c3c565b6106cc9190610cc5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072257600080fd5b505afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610d83565b5050509150506402540be400816107719190610dfe565b915050919050565b8280548282559060005260206000209081019282156107f2579160200282015b828111156107f15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610799565b5b5090506107ff9190610803565b5090565b5b8082111561081c576000816000905550600101610804565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085082610825565b9050919050565b61086081610845565b811461086b57600080fd5b50565b60008135905061087d81610857565b92915050565b60006020828403121561089957610898610820565b5b60006108a78482850161086e565b91505092915050565b6000819050919050565b6108c3816108b0565b82525050565b60006020820190506108de60008301846108ba565b92915050565b6108ed816108b0565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b60006020828403121561092657610925610820565b5b6000610934848285016108fb565b91505092915050565b61094681610845565b82525050565b6000602082019050610961600083018461093d565b92915050565b6000819050919050565b600061098c61098761098284610825565b610967565b610825565b9050919050565b600061099e82610971565b9050919050565b60006109b082610993565b9050919050565b6109c0816109a5565b82525050565b60006020820190506109db60008301846109b7565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a28601b836109e1565b9150610a33826109f2565b602082019050919050565b60006020820190508181036000830152610a5781610a1b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a98826108b0565b9150610aa3836108b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad857610ad7610a5e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b1d826108b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b5057610b4f610a5e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ba5600083610b8a565b9150610bb082610b95565b600082019050919050565b6000610bc682610b98565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c06600b836109e1565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b6000610c47826108b0565b9150610c52836108b0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8b57610c8a610a5e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cd0826108b0565b9150610cdb836108b0565b925082610ceb57610cea610c96565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d1581610cf6565b8114610d2057600080fd5b50565b600081519050610d3281610d0c565b92915050565b6000819050919050565b610d4b81610d38565b8114610d5657600080fd5b50565b600081519050610d6881610d42565b92915050565b600081519050610d7d816108e4565b92915050565b600080600080600060a08688031215610d9f57610d9e610820565b5b6000610dad88828901610d23565b9550506020610dbe88828901610d59565b9450506040610dcf88828901610d6e565b9350506060610de088828901610d6e565b9250506080610df188828901610d23565b9150509295509295909350565b6000610e0982610d38565b9150610e1483610d38565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e5357610e52610a5e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e9057610e8f610a5e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ecd57610ecc610a5e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0a57610f09610a5e565b5b82820290509291505056fea264697066735822122046569dcefaa287d3e683b511107dd392b43b2e8df47398da6c6b0fc9e2654b2464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}